{"version":3,"sources":["utils/index.ts","utils/http.ts","utils/use-async.ts","components/error-boundary.tsx","App.tsx","reportWebVitals.ts","context/index.tsx","index.tsx","auth-provider.ts","components/lib.tsx","context/auth-context.tsx"],"names":["cleanObject","object","result","Object","keys","forEach","key","value","undefined","isVoid","useMount","callback","useEffect","useDebounce","delay","useState","debouncedValue","setDebouncedValue","timeout","setTimeout","clearTimeout","useDocumentTitle","title","keepOnUnmount","oldTitle","useRef","document","current","resetRoute","window","location","href","origin","subset","obj","filteredEntries","entries","filter","includes","fromEntries","useMountedRef","mountedRef","apiUrl","process","http","endpoint","a","data","token","headers","customConfig","config","method","Authorization","toUpperCase","qs","stringify","body","JSON","fetch","then","response","status","auth","reload","Promise","reject","message","json","ok","useHttp","user","useAuth","useCallback","defaultInitialState","stat","error","defaultConfig","throwOnError","useAsync","initialState","initialConfig","useReducer","state","action","safeDispatch","dispatch","useSafeDispatch","retry","setRetry","setData","setError","run","promise","runConfig","Error","catch","isIdle","isLoading","isError","isSuccess","ErrorBoundary","this","props","fallbackRender","children","React","Component","AuthenticatedApp","lazy","UnauthenticatedApp","App","className","FullPageErrorFallback","Suspense","fallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","AppProviders","queryClient","QueryClient","defaultOptions","queries","refetchOnWindowFocus","QueryClientProvider","client","loadServer","ReactDOM","render","StrictMode","getElementById","localStorageKey","getToken","localStorage","getItem","handleUserResponse","setItem","login","register","logout","removeItem","Row","styled","div","between","marginBottom","gap","FullPage","FullPageLoading","size","ErrorBox","ButtonNoPadding","Button","Text","type","ScreenContainer","bootstrapUser","AuthContext","createContext","displayName","AuthProvider","setUser","useQueryClient","Provider","form","clear","context","useContext"],"mappings":"qXAkBaA,EAAc,SAACC,GAE1B,IAAKA,EACH,MAAO,GAET,IAAMC,EAAM,eAAQD,GAYpB,OAXAE,OAAOC,KAAKF,GAAQG,SAAQ,SAACC,IAlBT,SAACC,GAAD,YAA8BC,IAAVD,GAAiC,OAAVA,GAA4B,KAAVA,GAyB3EE,CALUP,EAAOI,YAMZJ,EAAOI,MAGXJ,GAGIQ,EAAW,SAACC,GACvBC,qBAAU,WACRD,MAEC,KA4BQE,EAAc,SAAIN,EAAUO,GAAoB,IAAD,EACdC,mBAASR,GADK,mBACnDS,EADmD,KACnCC,EADmC,KAS1D,OANAL,qBAAU,WAER,IAAMM,EAAUC,YAAW,kBAAMF,EAAkBV,KAAQO,GAE3D,OAAO,kBAAMM,aAAaF,MACzB,CAACX,EAAOO,IACJE,GAGIK,EAAmB,SAACC,GAAkD,IAAnCC,IAAkC,yDAC1EC,EAAWC,iBAAOC,SAASJ,OAAQK,QAEzCf,qBAAU,WACRc,SAASJ,MAAQA,IAChB,CAACA,IAEJV,qBAAU,WACR,OAAO,WACDW,IACFG,SAASJ,MAAQE,MAGpB,CAACD,EAAeC,KAGRI,EAAa,kBAAMC,OAAOC,SAASC,KAAOF,OAAOC,SAASE,QAQ1DC,EAAS,SAIpBC,EACA9B,GAEA,IAAM+B,EAAkBhC,OAAOiC,QAAQF,GAAKG,QAAO,gBAAE/B,EAAF,2BACjDF,EAAKkC,SAAShC,MAEhB,OAAOH,OAAOoC,YAAYJ,IAQfK,EAAgB,WAC3B,IAAMC,EAAahB,kBAAO,GAS1B,OAPAb,qBAAU,WAER,OADA6B,EAAWd,SAAU,EACd,WACLc,EAAWd,SAAU,MAIlBc,I,4LCjIHC,EAASC,oBAOFC,EAAI,uCAAG,WAAOC,GAAP,mCAAAC,EAAA,8FAA6E,GAAlDC,EAA3B,EAA2BA,KAAMC,EAAjC,EAAiCA,MAAjC,EAAwCC,QAAYC,EAApD,0CASiB,SAR7BC,EADY,aAEhBC,OAAQ,MACRH,QAAS,CACPI,cAAeL,EAAK,iBAAaA,GAAU,GAC3C,eAAgBD,EAAO,mBAAqB,KAE3CG,IAEKE,OAAOE,cACfT,GAAQ,WAAQU,IAAGC,UAAUT,IAE7BI,EAAOM,KAAOC,KAAKF,UAAUT,GAAQ,IAZrB,kBAeXlB,OAAO8B,MAAP,UAAgBjB,EAAhB,YAA0BG,GAAYM,GAC1CS,KADI,uCACC,WAAMC,GAAN,eAAAf,EAAA,yDACmB,MAApBe,EAASC,OADR,gCAEIC,MAFJ,cAGFlC,OAAOC,SAASkC,SAHd,kBAIKC,QAAQC,OAAO,CAACC,QAAS,oCAJ9B,uBAMeN,EAASO,OANxB,UAMErB,EANF,QAODc,EAASQ,GAPR,0CAQKtB,GARL,iCAUKkB,QAAQC,OAAOnB,IAVpB,4CADD,wDAfW,2CAAH,sDA+BJuB,EAAU,WAAO,IACrBC,EAAQC,cAARD,KACP,OAAOE,uBAAY,uFAAK5B,EAAL,KAAeM,EAAf,YAAoDP,EAAKC,EAAD,YAAC,eAAcM,GAAf,IAAuBH,MAAK,OAAEuB,QAAF,IAAEA,OAAF,EAAEA,EAAMvB,WAAS,QAACuB,QAAD,IAACA,OAAD,EAACA,EAAMvB,U,uGCpC3H0B,EAAmC,CACvCC,KAAM,OACN5B,KAAM,KACN6B,MAAO,MAGHC,EAAgB,CACpBC,cAAc,GAWHC,EAAW,SACtBC,EACAC,GAEA,IAAM9B,EAAM,2BAAQ0B,GAAkBI,GADnC,EAEuBC,sBACxB,SAACC,EAAiBC,GAAlB,mBAAC,eAAqDD,GAAUC,KAD9B,YAAC,eAG9BV,GACAM,IANJ,mBAEIG,EAFJ,KAUGE,EArBgB,SAAIC,GAC1B,IAAM7C,EAAaD,cACnB,OAAOiC,uBACL,kBAAmBhC,EAAWd,QAAU2D,EAAQ,WAAR,kBAAoB,IAC5D,CAACA,EAAU7C,IAiBQ8C,CAVlB,QAWuBxE,oBAAS,kBAAM,gBAXtC,mBAWIyE,EAXJ,KAWWC,EAXX,KAaGC,EAAUjB,uBACd,SAAC1B,GAAD,OACEsC,EAAa,CACXtC,OACA4B,KAAM,UACNC,MAAO,SAEX,CAACS,IAGGM,EAAWlB,uBACf,SAACG,GAAD,OACES,EAAa,CACXT,QACAD,KAAM,QACN5B,KAAM,SAEV,CAACsC,IAIGO,EAAMnB,uBACV,SAACoB,EAAqBC,GACpB,IAAKD,IAAYA,EAAQjC,KACvB,MAAM,IAAImC,MAAM,uDAQlB,OANAN,GAAS,kBAAM,YACb,OAAIK,QAAJ,IAAIA,OAAJ,EAAIA,EAAWN,QACbI,EAAG,OAACE,QAAD,IAACA,OAAD,EAACA,EAAWN,QAASM,OAG5BT,EAAa,CAAEV,KAAM,YACdkB,EACJjC,MAAK,SAACb,GAEL,OADA2C,EAAQ3C,GACDA,KAERiD,OAAM,SAACpB,GAGN,OADAe,EAASf,GACLzB,EAAO2B,aAAqBb,QAAQC,OAAOU,GACxCA,OAGb,CAACzB,EAAO2B,aAAcY,EAASC,EAAUN,IAG3C,OAAO,aACLY,OAAuB,SAAfd,EAAMR,KACduB,UAA0B,YAAff,EAAMR,KACjBwB,QAAwB,UAAfhB,EAAMR,KACfyB,UAA0B,YAAfjB,EAAMR,KACjBiB,MACAF,UACAC,WAEAH,SACGL,K,4KChGMkB,EAAb,4MAIElB,MAAQ,CAAEP,MAAO,MAJnB,4CAWE,WAAU,IACAA,EAAU0B,KAAKnB,MAAfP,MADD,EAE8B0B,KAAKC,MAAlCC,EAFD,EAECA,eAAgBC,EAFjB,EAEiBA,SACxB,OAAI7B,EACK4B,EAAe,CAAE5B,UAEnB6B,KAjBX,uCAOE,SAAgC7B,GAC9B,MAAO,CAAEA,aARb,GAAmC8B,IAAMC,W,gBCKnCC,EAAmBF,IAAMG,MAAK,kBAAM,8DACpCC,EAAqBJ,IAAMG,MAAK,kBAAM,uDAgB7BE,MAdf,WAAgB,IACNxC,EAASC,cAATD,KAER,OACE,qBAAKyC,UAAU,MAAf,SACE,cAAC,EAAD,CAAeR,eAAgBS,IAA/B,SACE,cAAC,IAAMC,SAAP,CAAgBC,SAAU,cAAC,IAAD,IAA1B,SACG5C,EAAO,cAACqC,EAAD,IAAuB,cAACE,EAAD,WCL1BM,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB1D,MAAK,YAAkD,IAA/C2D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,6CCODO,EAAe,SAAC,GAA2C,IAAzCnB,EAAwC,EAAxCA,SACvBoB,EAAc,IAAIC,IAAY,CAClCC,eAAgB,CACdC,QAAS,CACPC,sBAAsB,MAK5B,OACE,cAACC,EAAA,EAAD,CAAqBC,OAAQN,EAA7B,SACE,cAAC,IAAD,UACE,cAAC,IAAD,UAAepB,SCnBvB2B,aAAW,kBACTC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,eAAC,EAAD,WACE,cAAC,IAAD,IACA,cAAC,EAAD,SAGJ7G,SAAS8G,eAAe,YAS5BpB,K,qMCvBM1E,EAASC,oBAET8F,EAAkB,0BAEXC,EAAW,kBAAM7G,OAAO8G,aAAaC,QAAQH,IAE7CI,EAAqB,SAAC,GAA8B,IAA5BtE,EAA2B,EAA3BA,KAEpC,OADA1C,OAAO8G,aAAaG,QAAQL,EAAiBlE,EAAKvB,OAAS,IACpDuB,GAGKwE,EAAQ,SAAChG,GACpB,OAAOY,MAAM,GAAD,OAAIjB,EAAJ,UAAoB,CAC9BU,OAAQ,OACRH,QAAS,CACP,eAAgB,oBAElBQ,KAAMC,KAAKF,UAAUT,KACpBa,KANI,uCAMC,WAAOC,GAAP,SAAAf,EAAA,0DACFe,EAASQ,GADP,4BAEGwE,EAFH,SAE4BhF,EAASO,OAFrC,+EAIGH,QAJH,UAIwBJ,EAASO,OAJjC,kDAIWF,OAJX,6DAND,wDAeI8E,EAAW,SAACjG,GACxB,OAAOY,MAAM,GAAD,OAAIjB,EAAJ,aAAuB,CAClCU,OAAQ,OACRH,QAAS,CACR,eAAgB,oBAEjBQ,KAAMC,KAAKF,UAAUT,KACnBa,KANI,uCAMC,WAAOC,GAAP,SAAAf,EAAA,0DACHe,EAASQ,GADN,4BAECwE,EAFD,SAE0BhF,EAASO,OAFnC,+EAICH,QAJD,UAIsBJ,EAASO,OAJ/B,kDAISF,OAJT,6DAND,wDAeK+E,EAAM,uCAAG,sBAAAnG,EAAA,+EAAWjB,OAAO8G,aAAaO,WAAWT,IAA1C,2CAAH,sD,2TCzCNU,EAAMC,IAAOC,IAAV,6NAOK,SAAC9C,GAAD,OAAYA,EAAM+C,QAAU,qBAAkB9I,KAChD,SAAA+F,GAAK,OAAIA,EAAMgD,aAAe,SAI7B,SAAAhD,GAAK,MACE,kBAAdA,EAAMiD,IACXjD,EAAMiD,IAAM,MACZjD,EAAMiD,IAAM,YACZhJ,KAIFiJ,EAAWL,IAAOC,IAAV,oHAODK,EAAkB,kBAAM,cAACD,EAAD,UACnC,cAAC,IAAD,CAAME,KAAM,aAGD1C,EAAwB,SAAC,GAAD,IAAErC,EAAF,EAAEA,MAAF,OAAsC,eAAC6E,EAAD,WACzE,cAAC,IAAD,IACA,cAACG,EAAD,CAAUhF,MAAOA,QAGNiF,EAAkBT,YAAOU,IAAPV,CAAH,2CAOfQ,EAAW,SAAC,GAAiC,IAFzCrJ,EAESqE,EAA+B,EAA/BA,MACxB,OAHc,QAACrE,EAGHqE,SAHE,IAAgCrE,OAAhC,EAAgCA,EAAO4D,SAI5C,cAAC,IAAW4F,KAAZ,CAAiBC,KAAM,SAAvB,gBAAkCpF,QAAlC,IAAkCA,OAAlC,EAAkCA,EAAOT,UAG3C,MAII8F,EAAkBb,IAAOC,IAAV,8G,6MCxBtBa,EAAa,uCAAG,gCAAApH,EAAA,yDAChByB,EAAO,OACLvB,EAAQe,OAFM,gCAICnB,YAAK,KAAM,CAAEI,UAJd,OAIZD,EAJY,OAKlBwB,EAAOxB,EAAKwB,KALM,gCAObA,GAPa,2CAAH,qDAUb4F,EAAczD,IAAM0D,mBAQxB5J,GACF2J,EAAYE,YAAc,cAEnB,IAAMC,EAAe,SAAC,GAA2C,IAAzC7D,EAAwC,EAAxCA,SAAwC,EASjE1B,cAPIR,EAF6D,EAEnExB,KACA6B,EAHmE,EAGnEA,MACAsB,EAJmE,EAInEA,UACAD,EALmE,EAKnEA,OACAE,EANmE,EAMnEA,QACAP,EAPmE,EAOnEA,IACS2E,EAR0D,EAQnE7E,QAGImC,EAAc2C,cAqBpB,OALA9J,aAAS,WACPkF,EAAIsE,QAIFjE,GAAUC,EACL,cAAC,IAAD,IAGLC,EACK,cAAC,IAAD,CAAuBvB,MAAOA,IAOrC,cAACuF,EAAYM,SAAb,CACEhE,SAAUA,EACVlG,MAAO,CAAEgE,OAAMwE,MA1BL,SAAC2B,GAAD,OAAoB3G,IAAW2G,GAAM9G,KAAK2G,IA0B9BvB,SAzBT,SAAC0B,GAAD,OAAoB3G,IAAc2G,GAAM9G,KAAK2G,IAyB1BtB,OAxBrB,kBACblF,MAAcH,MAAK,WACjB2G,EAAQ,MACR1C,EAAY8C,gBA0CLnG,EAAU,WACrB,IAAMoG,EAAUlE,IAAMmE,WAAWV,GACjC,IAAKS,EACH,MAAM,IAAI7E,MAAM,2DAElB,OAAO6E,K","file":"static/js/main.3327e7d1.chunk.js","sourcesContent":["// import {useEffect} from \"react\"\r\n\r\nimport { useEffect, useRef, useState } from \"react\"\r\n\r\nexport const isFalsy = (value: any) => value === 0 ? false : !value\r\n\r\nexport const isVoid = (value: unknown) => value === undefined || value === null || value === ''\r\n\r\n// let a: object\r\n// a = { name: 'jack'}\r\n// a = () => {}\r\n// a = new RegExp('')\r\n\r\n// let b: { [key: string]: unknown }\r\n// b = { name: 'jack'}\r\n// b = () => {}\r\n\r\n// 在一个函数里，改变传入的对象本身是不好的\r\nexport const cleanObject = (object?: { [key: string]: unknown }) => {\r\n  // Object.assign({}, object)\r\n  if (!object) {\r\n    return {}\r\n  }\r\n  const result = { ...object }\r\n  Object.keys(result).forEach((key) => {\r\n\r\n    const value = result[key]\r\n    // 可能为0的情况，故改为\r\n    // if(!value) {\r\n    //   delete result[key]\r\n    // }\r\n    if (isVoid(value)) {\r\n      delete result[key];\r\n    }\r\n  })\r\n  return result\r\n}\r\n\r\nexport const useMount = (callback: () => void) => {\r\n  useEffect(() => {\r\n    callback()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n}\r\n\r\n// const debounce = (func, delay) => {\r\n//   let timeout;\r\n//   return (...param) => {\r\n//     if(timeout) {\r\n//       clearTimeout(timeout);\r\n//     }\r\n//     timeout = setTimeout(function() {\r\n//       func(...param);\r\n//     }, delay);\r\n//   }\r\n// }\r\n// const log = debounce(() => console.log('call'), 5000)\r\n// log()\r\n// log()\r\n// log()\r\n// ...5s后执行\r\n\r\n// debounce 原理讲解：\r\n// 0s ------------> 1s ---------------> 2s --------------> ...\r\n// 要理解：这三个函数都是同步操作，所以她们都是在 0-1s 这个时间段内瞬间完成的；\r\n// log()#1 // timeout#1\r\n// log()#2 // 发现 timeout#1! 取消之， 然后设置 timeout#2\r\n// log()#3 // 发现 timeout#2! 取消之， 然后设置 timeout#3\r\n//         // 所以，log()#3 结束后，就只剩 timeout#3在独自等待了\r\n\r\nexport const useDebounce = <V>(value: V, delay?: number) => {\r\n  const [debouncedValue, setDebouncedValue] = useState(value)\r\n\r\n  useEffect(() => {\r\n    // 每次在 value 变化以后，设置一个定时器\r\n    const timeout = setTimeout(() => setDebouncedValue(value), delay)\r\n    // 每次在上一个useEffect处理完以后再运行\r\n    return () => clearTimeout(timeout)\r\n  }, [value, delay])\r\n  return debouncedValue;\r\n}\r\n\r\nexport const useDocumentTitle = (title: string, keepOnUnmount: boolean = true) => {\r\n  const oldTitle = useRef(document.title ).current\r\n\r\n  useEffect(() => {\r\n    document.title = title\r\n  }, [title])\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if(!keepOnUnmount) {\r\n        document.title = oldTitle\r\n      }\r\n    }\r\n  }, [keepOnUnmount, oldTitle])\r\n}\r\n\r\nexport const resetRoute = () => window.location.href = window.location.origin\r\n\r\n/**\r\n * 传入一个对象，和键集合，返回对应的对象中的键值对\r\n * @param obj\r\n * @param keys\r\n */\r\n\r\nexport const subset = <\r\n  O extends { [key in string]: unknown },\r\n  K extends keyof O\r\n>(\r\n  obj: O,\r\n  keys: K[]\r\n) => {\r\n  const filteredEntries = Object.entries(obj).filter(([key]) =>\r\n    keys.includes(key as K)\r\n  );\r\n  return Object.fromEntries(filteredEntries) as Pick<O, K>;\r\n};\r\n\r\n\r\n/**\r\n * 返回组件的挂在状态，如果还没挂载或者已经卸载，返回 fasle；反之，返回 true\r\n */\r\n\r\nexport const useMountedRef = () => {\r\n  const mountedRef = useRef(false)\r\n\r\n  useEffect(() => {\r\n    mountedRef.current = true\r\n    return () => {\r\n      mountedRef.current = false\r\n    }\r\n  })\r\n\r\n  return mountedRef\r\n\r\n}\r\n","import qs from 'qs';\r\nimport { useCallback } from 'react';\r\nimport * as auth from '../auth-provider';\r\nimport { useAuth } from '../context/auth-context';\r\n\r\nconst apiUrl = process.env.REACT_APP_API_URL;\r\n\r\ninterface Config extends RequestInit {\r\n  token?: string,\r\n  data?: object\r\n}\r\n\r\nexport const http = async (endpoint: string, { data, token, headers, ...customConfig }: Config = {}) => {\r\n  const config = {\r\n    method: 'GET',\r\n    headers: {\r\n      Authorization: token ? `Bearer ${token}` : '',\r\n      'Content-Type': data ? 'application/json' : '',\r\n    },\r\n    ...customConfig\r\n  }\r\n  if(config.method.toUpperCase() === 'GET') {\r\n    endpoint += `?${qs.stringify(data)}`\r\n  } else {\r\n    config.body = JSON.stringify(data || {})\r\n  }\r\n  \r\n  return window.fetch(`${apiUrl}/${endpoint}`, config)\r\n    .then(async response => {\r\n      if(response.status === 401) {\r\n        await auth.logout()\r\n        window.location.reload()\r\n        return Promise.reject({message: '请重新登录'})\r\n      }\r\n      const data = await response.json()\r\n      if(response.ok) {\r\n        return data\r\n      } else {\r\n        return Promise.reject(data)\r\n      }\r\n    })\r\n}\r\n\r\nexport const useHttp = () => {\r\n  const {user} = useAuth()\r\n  return useCallback((...[endpoint, config]: Parameters<typeof http>) => http(endpoint, {...config, token: user?.token}), [user?.token])\r\n}\r\n","import { useCallback, useReducer, useState } from \"react\"\r\nimport { useMountedRef } from \".\"\r\n\r\ninterface State<D> {\r\n  error: Error | null;\r\n  data: D | null;\r\n  stat: 'idle' | 'loading' | 'error' | 'success'\r\n}\r\n\r\nconst defaultInitialState: State<null> = {\r\n  stat: 'idle',\r\n  data: null,\r\n  error: null\r\n}\r\n\r\nconst defaultConfig = {\r\n  throwOnError: false\r\n}\r\n\r\nconst useSafeDispatch = <T>(dispatch: (...args: T[]) => void) => {\r\n  const mountedRef = useMountedRef()\r\n  return useCallback(\r\n    (...args: T[]) => (mountedRef.current ? dispatch(...args) : void 0),\r\n    [dispatch, mountedRef]\r\n  )\r\n}\r\n\r\nexport const useAsync = <D>(\r\n  initialState?: State<D>,\r\n  initialConfig?: typeof defaultConfig\r\n) => {\r\n  const config = { ...defaultConfig, ...initialConfig };\r\n  const [state, dispatch] = useReducer(\r\n    (state: State<D>, action: Partial<State<D>>) => ({ ...state, ...action }),\r\n    {\r\n      ...defaultInitialState,\r\n      ...initialState,\r\n    }\r\n  )\r\n\r\n  const safeDispatch = useSafeDispatch(dispatch)\r\n  const [retry, setRetry] = useState(() => () => {})\r\n\r\n  const setData = useCallback(\r\n    (data: D) =>\r\n      safeDispatch({\r\n        data,\r\n        stat: \"success\",\r\n        error: null,\r\n      }),\r\n    [safeDispatch]\r\n  )\r\n\r\n  const setError = useCallback(\r\n    (error: Error) =>\r\n      safeDispatch({\r\n        error,\r\n        stat: \"error\",\r\n        data: null,\r\n      }),\r\n    [safeDispatch]\r\n  )\r\n\r\n  // run 用来触发异步请求\r\n  const run = useCallback(\r\n    (promise: Promise<D>, runConfig?: { retry: () => Promise<D> }) => {\r\n      if (!promise || !promise.then) {\r\n        throw new Error(\"请传入 Promise 类型数据\");\r\n      }\r\n      setRetry(() => () => {\r\n        if (runConfig?.retry) {\r\n          run(runConfig?.retry(), runConfig);\r\n        }\r\n      });\r\n      safeDispatch({ stat: \"loading\" });\r\n      return promise\r\n        .then((data) => {\r\n          setData(data);\r\n          return data;\r\n        })\r\n        .catch((error) => {\r\n          // catch会消化异常，如果不主动抛出，外面是接收不到异常的\r\n          setError(error);\r\n          if (config.throwOnError) return Promise.reject(error);\r\n          return error;\r\n        });\r\n    },\r\n    [config.throwOnError, setData, setError, safeDispatch]\r\n  )\r\n\r\n  return {\r\n    isIdle: state.stat === \"idle\",\r\n    isLoading: state.stat === \"loading\",\r\n    isError: state.stat === \"error\",\r\n    isSuccess: state.stat === \"success\",\r\n    run,\r\n    setData,\r\n    setError,\r\n    // retry 被调用时重新跑一遍run，让state刷新一遍\r\n    retry,\r\n    ...state,\r\n  }\r\n}\r\n\r\n","import React from \"react\";\r\n\r\ntype FallbackRender = (props: { error: Error | null }) => React.ReactElement;\r\n\r\nexport class ErrorBoundary extends React.Component<\r\n  React.PropsWithChildren<{ fallbackRender: FallbackRender }>,\r\n  { error: Error | null }\r\n> {\r\n  state = { error: null };\r\n\r\n  // 当子组件抛出异常，这里会接收到并且调用\r\n  static getDerivedStateFromError(error: Error) {\r\n    return { error };\r\n  }\r\n\r\n  render() {\r\n    const { error } = this.state;\r\n    const { fallbackRender, children } = this.props;\r\n    if (error) {\r\n      return fallbackRender({ error });\r\n    }\r\n    return children;\r\n  }\r\n}","import React from 'react';\nimport './App.css';\n// import { AuthenticatedApp } from './authenticated-app';\n// import { UnauthenticatedApp } from './unauthenticated-app';\nimport { useAuth } from './context/auth-context';\nimport { ErrorBoundary } from \"./components/error-boundary\";\nimport { FullPageErrorFallback, FullPageLoading } from './components/lib';\n// import {ProjectListScreen} from './screens/project-list';\n\nconst AuthenticatedApp = React.lazy(() => import(\"./authenticated-app\"));\nconst UnauthenticatedApp = React.lazy(() => import(\"./unauthenticated-app\"));\n\nfunction App() {\n  const { user } = useAuth();\n\n  return (\n    <div className=\"App\">\n      <ErrorBoundary fallbackRender={FullPageErrorFallback}>\n        <React.Suspense fallback={<FullPageLoading />}>\n          {user ? <AuthenticatedApp /> : <UnauthenticatedApp />}\n        </React.Suspense>\n      </ErrorBoundary>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { ReactNode } from 'react';\r\nimport { AuthProvider } from '../context/auth-context';\r\nimport { QueryClient, QueryClientProvider } from \"react-query\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n// import { store } from '../store';\r\n\r\n// export const AppProviders = ({ children }: { children: ReactNode }) => {\r\n//   return (\r\n//     <Provider store={store}>\r\n//       <QueryClientProvider client={new QueryClient()}>\r\n//         <AuthProvider>{children}</AuthProvider>\r\n//       </QueryClientProvider>\r\n//     </Provider>\r\n//   )\r\n// }\r\n\r\nexport const AppProviders = ({ children }: { children: ReactNode }) => {\r\n  const queryClient = new QueryClient({\r\n    defaultOptions: {\r\n      queries: {\r\n        refetchOnWindowFocus: false,\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <QueryClientProvider client={queryClient}>\r\n      <Router>\r\n        <AuthProvider>{children}</AuthProvider>\r\n      </Router>\r\n    </QueryClientProvider>\r\n  );\r\n};","import './wdyr'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { DevTools, loadServer } from 'jira-dev-tool';\nimport 'antd/dist/antd.less';\nimport { AppProviders } from './context';\n\nloadServer(() => \n  ReactDOM.render(\n    <React.StrictMode>\n      <AppProviders>\n        <DevTools />\n        <App />\n      </AppProviders>  \n    </React.StrictMode>,\n    document.getElementById('root')\n  )\n)\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// 在真实环境中，如果使用 firebase 这种第三方 auth 服务的话，本文件不需要开发者开发\r\nimport { User } from \"./types/User\";\r\n\r\nconst apiUrl = process.env.REACT_APP_API_URL\r\n\r\nconst localStorageKey = '__auth_provider_token__'\r\n\r\nexport const getToken = () => window.localStorage.getItem(localStorageKey)\r\n\r\nexport const handleUserResponse = ({ user }: { user: User }) => {\r\n\twindow.localStorage.setItem(localStorageKey, user.token || '')\r\n\treturn user\r\n}\r\n\r\nexport const login = (data: { username: string; password: string }) => {\r\n  return fetch(`${apiUrl}/login`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(data),\r\n  }).then(async (response) => {\r\n    if (response.ok) {\r\n      return handleUserResponse(await response.json());\r\n    } else {\r\n      return Promise.reject(await response.json());\r\n    }\r\n  });\r\n};\r\n\r\nexport const register = (data: { username: string, password: string }) => {\r\n\treturn fetch(`${apiUrl}/register`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t},\r\n\t\tbody: JSON.stringify(data),\r\n\t}).then(async (response) => {\r\n\t\tif (response.ok) {\r\n\t\t\treturn handleUserResponse(await response.json())\r\n\t\t}else {\r\n\t\t\treturn Promise.reject(await response.json())\r\n\t\t}\r\n\t})\r\n}\r\n\r\nexport const logout = async() => window.localStorage.removeItem(localStorageKey)","import styled from \"@emotion/styled\";\r\nimport { Button, Spin, Typography } from \"antd\";\r\nimport { DevTools } from \"jira-dev-tool\";\r\nimport React from \"react\";\r\n\r\nexport const Row = styled.div<{\r\n  gap?: number | boolean;\r\n  between?: boolean;\r\n  marginBottom?: number\r\n}>`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: ${(props) => (props.between ? \"space-between\" : undefined)};\r\n  margin-bottom: ${props => props.marginBottom + 'rem' };\r\n  > * {\r\n    margin-top: 0 !important;\r\n    margin-bottom: 0 !important;\r\n    margin-right: ${props => \r\n      typeof props.gap === 'number' \r\n      ? props.gap + 'rem' \r\n      : props.gap ? '2rem' \r\n      : undefined};\r\n  }\r\n`\r\n\r\nconst FullPage = styled.div`\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nexport const FullPageLoading = () => <FullPage>\r\n  <Spin size={\"large\"} />\r\n</FullPage>\r\n\r\nexport const FullPageErrorFallback = ({error}: { error: Error | null }) => <FullPage>\r\n  <DevTools />\r\n  <ErrorBox error={error}></ErrorBox>  \r\n</FullPage>\r\n\r\nexport const ButtonNoPadding = styled(Button)`\r\n  padding: 0;\r\n`\r\n\r\n// 类型守卫\r\nconst isError = (value: any): value is Error => value?.message\r\n\r\nexport const ErrorBox = ({error}: { error: unknown }) => {\r\n  if (isError(error)) {\r\n    return <Typography.Text type={'danger'}>{error?.message}</Typography.Text>\r\n  }\r\n\r\n  return null\r\n}\r\n\r\n\r\nexport const ScreenContainer = styled.div`\r\n  padding: 3.2rem;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n`","import React from \"react\";\r\nimport {  ReactNode } from \"react\";\r\nimport * as auth from '../auth-provider';\r\nimport { FullPageErrorFallback, FullPageLoading } from \"../components/lib\";\r\nimport { User } from \"../types/User\";\r\nimport { useMount } from \"../utils\";\r\nimport { http } from \"../utils/http\";\r\nimport { useAsync } from \"../utils/use-async\";\r\n// import * as authStore from '../store/auth.slice';\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import { bootstrap, selectUser } from \"../store/auth.slice\";\r\nimport { useQueryClient } from \"react-query\";\r\n\r\n// 改用context,不用 redux\r\n\r\nexport interface AuthForm {\r\n  username: string,\r\n  password: string\r\n}\r\n\r\n// export const bootstrapUser = async () => {\r\n//   let user = null\r\n//   const token = auth.getToken()\r\n//   if (token) {\r\n//     const token = auth.getToken()\r\n//     if (token) {\r\n//       const data = await http('me', { token })\r\n//       user = data.user\r\n//     }\r\n//     return user\r\n//   }\r\n// }\r\n\r\nconst bootstrapUser = async () => {\r\n  let user = null;\r\n  const token = auth.getToken();\r\n  if (token) {\r\n    const data = await http(\"me\", { token });\r\n    user = data.user;\r\n  }\r\n  return user;\r\n}\r\n\r\nconst AuthContext = React.createContext<\r\n  | {\r\n      user: User | null;\r\n      register: (form: AuthForm) => Promise<void>;\r\n      login: (form: AuthForm) => Promise<void>;\r\n      logout: () => Promise<void>;\r\n    }\r\n  | undefined\r\n>(undefined);\r\nAuthContext.displayName = \"AuthContext\";\r\n\r\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\r\n  const {\r\n    data: user,\r\n    error,\r\n    isLoading,\r\n    isIdle,\r\n    isError,\r\n    run,\r\n    setData: setUser,\r\n  } = useAsync<User | null>()\r\n\r\n  const queryClient = useQueryClient();\r\n\r\n  // const dispatch: (...args: unknown[]) => Promise<User> = useDispatch()\r\n\r\n  // useMount(() => {\r\n  //   run(dispatch(bootstrap()))\r\n  // })\r\n\r\n  // point free\r\n  const login = (form: AuthForm) => auth.login(form).then(setUser);\r\n  const register = (form: AuthForm) => auth.register(form).then(setUser);\r\n  const logout = () =>\r\n    auth.logout().then(() => {\r\n      setUser(null);\r\n      queryClient.clear();\r\n    });\r\n  useMount(() => {\r\n    run(bootstrapUser());\r\n  });\r\n\r\n\r\n  if (isIdle || isLoading) {\r\n    return <FullPageLoading />\r\n  }\r\n\r\n  if (isError) {\r\n    return <FullPageErrorFallback error={error} />\r\n  }\r\n\r\n  // return <div>\r\n  //   {children}\r\n  // </div>\r\n  return (\r\n    <AuthContext.Provider\r\n      children={children}\r\n      value={{ user, login, register, logout }}\r\n    />\r\n  );\r\n}\r\n\r\n\r\n\r\n// export const useAuth = () => {\r\n//   const dispatch: (...args: unknown[]) => Promise<User> = useDispatch()\r\n//   const user = useSelector(selectUser)\r\n//   const login = useCallback((form: AuthForm) => dispatch(authStore.login(form)), [dispatch])\r\n//   const register = useCallback((form: AuthForm) => dispatch(authStore.register(form)), [dispatch])\r\n//   const logout = useCallback(() => dispatch(authStore.logout()), [dispatch])\r\n//   return {\r\n//     user,\r\n//     login,\r\n//     register,\r\n//     logout\r\n//   }\r\n// }\r\n\r\nexport const useAuth = () => {\r\n  const context = React.useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error(\"useAuth必须在AuthProvider中使用\");\r\n  }\r\n  return context;\r\n};\r\n\r\n"],"sourceRoot":""}